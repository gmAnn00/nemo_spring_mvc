<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="mapper.qna">

	<select id="getTotQna" resultType="int">
		SELECT count(*) FROM QNA_TBL
	</select>
	
	
	<select id="getAdminQnaList" parameterType="java.util.Map" resultType="qnaVO">
		SELECT * FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		        FROM qna_tbl q, user_tbl u 
		        WHERE q.user_id=u.user_id START WITH q.parent_no=0
		        CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
		WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
	<select id="getUserQnaList" parameterType="java.util.Map" resultType="qnaVO">
		SELECT * FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		    FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		    	FROM qna_tbl q, user_tbl u
		    WHERE q.user_id=u.user_id AND q.user_id = #{user_id}
		    	OR q.parent_no IN (SELECT qna_no FROM qna_tbl WHERE user_id=#{user_id})
		    START WITH q.parent_no=0 CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
	    WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
	<select id="getQna" parameterType="int" resultType="qnaVO">
		SELECT q.*, u.nickname, u.user_img
		FROM QNA_TBL q, USER_TBL u
		WHERE q.qna_no=#{qna_no} AND q.user_id=u.user_id
	</select>
	
	
	<select id="getNewQnaNo" resultType="int">
		<![CDATA[
			SELECT nvl(max(qna_no), 0)+1 FROM QNA_TBL
		]]>
	</select>
	
	
	<insert id="addQna" parameterType="qnaVO">
		<![CDATA[
			INSERT INTO QNA_TBL(qna_no, user_id, parent_no, title, content, create_date)
			VALUES(#{qna_no}, #{user_id}, #{parent_no}, #{title}, #{content}, sysdate)
		]]>
	</insert>
	
	
	<update id="modQna" parameterType="qnaVO">
		UPDATE QNA_TBL SET title=#{title}, content=#{content}
		WHERE qna_no=#{qna_no}
	</update>


	<select id="getAccessible" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM QNA_TBL
		WHERE ( SELECT parent_no FROM QNA_TBL WHERE qna_no=#{qna_no} )
			IN (SELECT qna_no FROM QNA_TBL WHERE user_id=#{user_id})
	</select>
	
	
	<delete id="delQna" parameterType="int">
		DELETE FROM QNA_TBL WHERE qna_no
			IN (SELECT qna_no FROM QNA_TBL
				START WITH qna_no=#{qna_no}
				CONNECT BY PRIOR qna_no=parent_no)
	</delete>
	
	
	<select id="adminSearchQna" parameterType="java.util.Map" resultType="qnaVO">
		SELECT * FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		        FROM qna_tbl q, user_tbl u 
		        WHERE
		        
		        <choose>
		         	<when test="filter.equals('title')">
		         		q.title LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('content')">
		         		q.content LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('writer')">
		         		u.nickname LIKE '%'||#{keyword}||'%' AND
		         	</when>
        		 </choose>
		        
		        q.user_id=u.user_id START WITH q.parent_no=0
		        CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
		WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
	<select id="userSearchQna" parameterType="java.util.Map" resultType="qnaVO">
		SELECT * FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		    FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		    	FROM qna_tbl q, user_tbl u
		    WHERE
		    (
		    <choose>
		         	<when test="filter.equals('title')">
		         		q.title LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('content')">
		         		q.content LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('writer')">
		         		u.nickname LIKE '%'||#{keyword}||'%' AND
		         	</when>
        		 </choose>
		    
		    q.user_id=u.user_id AND q.user_id = #{user_id})
		    	OR 
		    	(
		    	<choose>
		         	<when test="filter.equals('title')">
		         		q.title LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('content')">
		         		q.content LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('writer')">
		         		u.nickname LIKE '%'||#{keyword}||'%' AND
		         	</when>
        		 </choose>
		    	q.parent_no IN (SELECT qna_no FROM qna_tbl WHERE user_id=#{user_id})
		    	)
		    START WITH q.parent_no=0 CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
	    WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
	<select id="getTotAdminSearchQna" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		        FROM qna_tbl q, user_tbl u 
		        WHERE
		        
		        <choose>
		         	<when test="filter.equals('title')">
		         		q.title LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('content')">
		         		q.content LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('writer')">
		         		u.nickname LIKE '%'||#{keyword}||'%' AND
		         	</when>
        		 </choose>
		        
		        q.user_id=u.user_id START WITH q.parent_no=0
		        CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
		WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
	<select id="getTotUserSearchQna" parameterType="java.util.Map" resultType="int">
		SELECT count(*) FROM (SELECT ROWNUM AS recNum, LVL, qna_no, parent_no, title, user_id, create_date, nickname
		    FROM (SELECT LEVEL AS LVL, q.qna_no, q.parent_no, q.title, q.user_id, q.create_date, u.nickname
		    	FROM qna_tbl q, user_tbl u
		    WHERE
		    (
		    <choose>
		         	<when test="filter.equals('title')">
		         		q.title LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('content')">
		         		q.content LIKE '%'||#{keyword}||'%' AND
		         	</when>
		         	
		         	<when test="filter.equals('writer')">
		         		u.nickname LIKE '%'||#{keyword}||'%' AND
		         	</when>
        		 </choose>
		    
		    q.user_id=u.user_id AND q.user_id = #{user_id})
		    	OR (
		    		<choose>
			         	<when test="filter.equals('title')">
			         		q.title LIKE '%'||#{keyword}||'%' AND
			         	</when>
			         	
			         	<when test="filter.equals('content')">
			         		q.content LIKE '%'||#{keyword}||'%' AND
			         	</when>
			         	
			         	<when test="filter.equals('writer')">
			         		u.nickname LIKE '%'||#{keyword}||'%' AND
			         	</when>
        			 </choose>
		    		q.parent_no IN (SELECT qna_no FROM qna_tbl WHERE user_id=#{user_id})
		    	)
		    START WITH q.parent_no=0 CONNECT BY PRIOR q.qna_no=q.parent_no ORDER SIBLINGS BY q.qna_no DESC))
	    WHERE recNum BETWEEN (#{section}-1)*100+(#{pagenum}-1)*10+1 AND (#{section}-1)*100+#{pagenum}*10
	</select>
	
	
</mapper>