<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="mapper.myPage">

	<select id="findMyProfileById" parameterType="String" resultType="myProfileVO">
		<![CDATA[
        	SELECT user_id, user_name, nickname, user_addr1, phone, email, TO_CHAR(birthdate, 'yyyy-mm-dd') as birthdate,
        	 user_img FROM USER_TBL WHERE user_id = #{user_id}
      ]]>
	</select>
	
	<select id="findMyInterestsById" parameterType="String" resultType="interestsVO">
		<![CDATA[
         SELECT * FROM INTERESTS_TBL WHERE user_id = #{user_id}
      ]]>
	</select>
	
	<select id="findMyUserInfoById" parameterType="String" resultType="modInfoVO">
		<![CDATA[
        	SELECT * FROM USER_TBL WHERE user_id = #{user_id}
      ]]>
	</select>
	
	<update id="modProfile" parameterType="java.util.Map">
		UPDATE USER_TBL SET password=#{password}, nickname=#{nickname}, zipcode=#{zipcode},
		user_addr1=#{user_addr1}, user_addr2=#{user_addr2}, phone=#{phone}, email=#{email},
		birthdate=TO_DATE(#{birthdate}, 'YYYY-MM-DD'), user_img=#{user_img} WHERE user_id=#{user_id}
	</update>
	
	<update id="modImage" parameterType="java.util.Map">
		UPDATE USER_TBL SET user_img=#{user_img} WHERE user_id=#{user_id}
	</update>
	
	<delete id="deleteInterests" parameterType="String">
		DELETE FROM INTERESTS_TBL WHERE user_id=#{user_id}
	</delete>

	<insert id="addInterests" parameterType="java.util.List">
		<foreach item="interest" collection="list" open="DECLARE BEGIN"
		separator=";" close="; END;">
			INSERT INTO INTERESTS_TBL(USER_ID, MAIN_CATE, SUB_CATE)
			VALUES(#{interest.user_id}, #{interest.main_cate}, #{interest.sub_cate})
		</foreach>
	</insert>
	
	<select id="checkPassword" parameterType="userVO" resultType="boolean">
		<![CDATA[
         SELECT DECODE(count(*), 1, 'true' , 'false') as result FROM USER_TBL WHERE user_id = #{user_id} AND password = #{password} AND cancel = 0
      ]]>
	</select>
	
	<update id="delUserBefore" parameterType="userVO">
		UPDATE USER_TBL SET cancel=1 WHERE user_id=#{user_id} AND password=#{password} AND cancel=0
	</update>

	
	<delete id="delUser">
		DELETE FROM USER_TBL WHERE user_id=#{user_id}
	</delete>


	<select id="getCommingSchedules" parameterType="String" resultType="commingScheduleVO">
		<![CDATA[
         SELECT t.group_id, t.group_name, t.group_img,
		TO_CHAR(t.schedule_date, 'YYYY"년 "MM"월 "DD"일 "AM HH"시 "MI"분"') as schedule_date,
		t.schedule_title, t.location FROM
		(SELECT ROWNUM as scdnum, g.group_id, g.group_name, g.group_img,
		s.schedule_date, s.schedule_title, s.location
		FROM GROUP_TBL g, SCHEDULE_TBL s, ATTEND_TBL a
		WHERE a.user_id =#{user_id} AND a.schedule_id=s.schedule_id AND s.group_id = g.group_id AND s.schedule_date >= sysdate
		ORDER BY s.schedule_date, g.group_id) t WHERE scdnum<=3
      ]]>
	</select>
	
	<select id="getSelectYMSchedule" parameterType="java.util.Map" resultType="string">
		<![CDATA[
        	SELECT substr(s.schedule_date, 7, 8) as day FROM SCHEDULE_TBL s, ATTEND_TBL a
        	WHERE a.user_id=#{user_id} AND substr(schedule_date, 1, 5) = #{selectYM} AND s.schedule_id=a.schedule_id
        	order by day
      ]]>
	</select>
	
	<select id="getSelectMonthSchedule" parameterType="java.util.Map" resultType="commingScheduleVO">
		<![CDATA[
			SELECT g.group_id, g.group_name, g.group_img,
			TO_CHAR(s.schedule_date, 'YYYY"년 "MM"월 "DD"일 "AM HH"시 "MI"분"') as schedule_date, s.schedule_title, s.location
			FROM GROUP_TBL g, SCHEDULE_TBL s, ATTEND_TBL a
			WHERE a.user_id =#{user_id} AND a.schedule_id=s.schedule_id AND
			s.group_id = g.group_id AND substr(s.schedule_date, 1, 5)=#{selectYM}
			ORDER BY s.schedule_date, g.group_id
		]]>
	</select>
	
	
	<select id="getLeaderGroup" parameterType="String" resultType="groupVO">
		<![CDATA[
        	SELECT * FROM GROUP_TBL WHERE group_leader=#{user_id}
      ]]>
	</select>
	
	
	<select id="getGroup" parameterType="String" resultType="groupVO">
		<![CDATA[
        	SELECT g.* FROM GROUP_TBL g, JOIN_TBL j
        	WHERE j.user_id=#{user_id} AND g.group_id=j.group_id AND g.group_leader<>#{user_id} AND j.cancel=0
      ]]>
	</select>
	
	
	<select id="getWaitGroup" parameterType="String" resultType="groupVO">
		<![CDATA[
        	SELECT g.* FROM GROUP_TBL g, WAITLIST_TBL w
        	WHERE w.user_id=#{user_id} AND g.group_id=w.group_id
      ]]>
	</select>
	
	
	<select id="getBookmarkGroup" parameterType="String" resultType="groupVO">
		<![CDATA[
        	SELECT g.* FROM GROUP_TBL g, BOOKMARK_TBL b
        	WHERE b.user_id=#{user_id} AND g.group_id=b.group_id
      ]]>
	</select>
	
	
	<select id="getMyBoardList" parameterType="String" resultType="boardVO">
		SELECT b.*, g.group_name, u.nickname, u.user_img
		FROM BOARD_TBL b, GROUP_TBL g, USER_TBL u
		WHERE u.user_id=#{user_id} AND b.user_id=#{user_id}
		AND b.group_id=g.group_id
	</select>
	
	
	<select id="getMyCommentList" parameterType="String" resultType="commentVO">
		SELECT c.*, u.nickname, u.user_img, g.group_id, g.group_name, b.title
		FROM COMMENT_TBL c, GROUP_TBL g, BOARD_TBL b, USER_TBL u
		WHERE u.user_id=#{user_id} AND c.user_id=#{user_id}
		AND b.group_id=g.group_id AND b.article_no=c.article_no
	</select>

</mapper>